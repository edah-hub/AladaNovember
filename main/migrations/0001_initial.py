# Generated by Django 4.1.7 on 2023-08-28 12:23

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="AppFunctions",
            fields=[
                (
                    "function_id",
                    models.CharField(max_length=100, primary_key=True, serialize=False),
                ),
                ("function_name", models.CharField(max_length=100)),
                ("purpose", models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="Branch",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "branch_name",
                    models.CharField(max_length=250, null=True, unique=True),
                ),
                ("branch_code", models.CharField(max_length=20, unique=True)),
                ("branch_location", models.CharField(max_length=200)),
                (
                    "main_branch",
                    models.CharField(
                        choices=[("Yes", "Yes"), ("No", "No")], max_length=12, null=True
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Company_details",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("company_name", models.CharField(max_length=250)),
                ("company_code", models.CharField(max_length=20, unique=True)),
                ("company_location", models.CharField(max_length=255)),
                (
                    "preffered_mode_of_payment",
                    models.CharField(
                        choices=[
                            ("Phone Number", "Phone Number"),
                            ("Paybill", "Paybill"),
                            ("Till", "Till"),
                            ("Cash", "Cash"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("till_number", models.IntegerField()),
                ("paybill_number", models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="Ingredient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.IntegerField(null=True)),
                (
                    "unit_price",
                    models.DecimalField(decimal_places=2, max_digits=210, null=True),
                ),
                (
                    "total_price",
                    models.DecimalField(decimal_places=2, max_digits=210, null=True),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Item",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("item_name", models.CharField(max_length=250)),
                ("item_code", models.CharField(max_length=255, unique=True)),
                (
                    "receveive_quantity",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("receive_by", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "issue_quantity",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("issue_by", models.CharField(blank=True, max_length=50, null=True)),
                ("issue_to", models.CharField(blank=True, max_length=50, null=True)),
                ("created_by", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "reorder_level",
                    models.IntegerField(blank=True, default="0", null=True),
                ),
                ("last_updated", models.DateTimeField(auto_now=True)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Item_category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("category_name", models.CharField(max_length=250, unique=True)),
                ("category_code", models.CharField(max_length=250, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Item_group",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("group_name", models.CharField(max_length=250, unique=True)),
                ("group_code", models.CharField(max_length=250, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Purchase_Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("po_number", models.CharField(max_length=255, unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("purchase_quantity", models.CharField(max_length=13)),
                ("purchase_date", models.DateTimeField(auto_now_add=True)),
                ("update_date", models.DateTimeField(auto_now=True)),
                (
                    "branch_name",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="purchase_branch",
                        to="main.branch",
                    ),
                ),
                (
                    "ingredients",
                    models.ManyToManyField(
                        blank=True, related_name="PO_ing", to="main.ingredient"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SupplierType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="UOM",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("UOM_name", models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name="UserRole",
            fields=[
                (
                    "role_id",
                    models.CharField(max_length=10, primary_key=True, serialize=False),
                ),
                ("role_name", models.CharField(max_length=200, unique=True)),
                (
                    "functions_allowed",
                    models.TextField(blank=True, default="", editable=False, null=True),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Supplier",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("supplier_name", models.CharField(max_length=250)),
                (
                    "preferred_mode_of_payment",
                    models.CharField(
                        choices=[
                            ("Phone Number", "Phone Number"),
                            ("Paybill", "Paybill"),
                            ("Till", "Till"),
                            ("Cash", "Cash"),
                        ],
                        max_length=12,
                        null=True,
                    ),
                ),
                ("physical_location", models.CharField(max_length=100)),
                ("email_address", models.EmailField(max_length=254)),
                ("phone_number", models.CharField(max_length=13)),
                ("credit_days", models.IntegerField()),
                (
                    "supplier_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="supplier_supplier_type",
                        to="main.suppliertype",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StockRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "order_type",
                    models.CharField(
                        choices=[
                            ("Sale Order", "Sale Order"),
                            ("Work Order", "Work Order"),
                        ],
                        max_length=12,
                        null=True,
                    ),
                ),
                ("consumed_quantity", models.IntegerField()),
                (
                    "item_UOM",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="item_uom_stock_request",
                        to="main.uom",
                    ),
                ),
                (
                    "items",
                    models.ManyToManyField(
                        related_name="stock_request_items", to="main.item"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StockEntry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.IntegerField()),
                (
                    "item_UOM",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="item_uom_stock_entry",
                        to="main.uom",
                    ),
                ),
                (
                    "items",
                    models.ManyToManyField(
                        related_name="stock_entry_items", to="main.item"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Stock_Receipt",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "orderstatus",
                    models.CharField(
                        choices=[("pending", "Pending"), ("confirm", "Confirm")],
                        default="pending",
                        max_length=500,
                        null=True,
                    ),
                ),
                ("stockreip", models.CharField(max_length=255, unique=True)),
                ("phone_number", models.CharField(max_length=500, null=True)),
                ("receive_by", models.CharField(blank=True, max_length=50, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("purchase_quantity", models.CharField(max_length=13)),
                ("purchase_date", models.DateTimeField(auto_now_add=True)),
                ("update_date", models.DateTimeField(auto_now=True)),
                (
                    "branch_name",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="purchase_orders",
                        to="main.branch",
                    ),
                ),
                (
                    "ingredients",
                    models.ManyToManyField(
                        blank=True, related_name="PO_ingredients", to="main.ingredient"
                    ),
                ),
                (
                    "item",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="po_item",
                        to="main.item",
                    ),
                ),
                (
                    "purchase_order",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main.purchase_order",
                    ),
                ),
                (
                    "supplier",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main.supplier",
                    ),
                ),
                (
                    "uomm",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="po_uom",
                        to="main.uom",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Purchase_Order_Item",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("purchase_quantity", models.PositiveIntegerField()),
                (
                    "item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="main.item"
                    ),
                ),
                (
                    "purchase_order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main.purchase_order",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="purchase_order",
            name="supplier",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="main.supplier",
            ),
        ),
        migrations.CreateModel(
            name="PaymentReports",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "pre_paid_amount",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                ("date", models.DateField()),
                ("paid_by", models.CharField(max_length=100)),
                (
                    "payment_mode",
                    models.CharField(
                        choices=[
                            ("cash", "Cash"),
                            ("credit", "Credit"),
                            ("cheque", "Cheque"),
                        ],
                        max_length=10,
                    ),
                ),
                ("time", models.TimeField()),
                ("stock_receipt_number", models.CharField(max_length=100)),
                ("payment_ref_no", models.CharField(max_length=100)),
                ("cash_voucher_no", models.CharField(max_length=100)),
                (
                    "branch",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="main.branch"
                    ),
                ),
                (
                    "purchase_order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main.purchase_order",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Managepayment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "supplier_name",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="suppeliername",
                        to="main.supplier",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="item",
            name="item_UOM",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="item_uom",
                to="main.uom",
            ),
        ),
        migrations.AddField(
            model_name="item",
            name="item_category",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="item_category",
                to="main.item_category",
            ),
        ),
        migrations.AddField(
            model_name="item",
            name="item_group",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="item_group",
                to="main.item_group",
            ),
        ),
        migrations.AddField(
            model_name="ingredient",
            name="item",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="ingredients_items",
                to="main.item",
            ),
        ),
        migrations.AddField(
            model_name="ingredient",
            name="item_UOM",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="item_uom_ingredients",
                to="main.uom",
            ),
        ),
        migrations.AddField(
            model_name="ingredient",
            name="main_item",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="ingredients_items_two",
                to="main.item",
            ),
        ),
        migrations.CreateModel(
            name="BranchTransfer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.IntegerField(null=True)),
                ("transfer_date", models.DateField(auto_now_add=True)),
                (
                    "from_branch",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="from_branch",
                        to="main.branch",
                    ),
                ),
                (
                    "item",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="item",
                        to="main.item",
                    ),
                ),
                (
                    "to_branch",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="to_branch",
                        to="main.branch",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BOM",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("bom_id", models.CharField(max_length=255, unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("edit_date", models.DateTimeField(auto_now=True)),
                (
                    "ingredients",
                    models.ManyToManyField(
                        blank=True, related_name="bom_ingredients", to="main.ingredient"
                    ),
                ),
                (
                    "item",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bom_item",
                        to="main.item",
                    ),
                ),
                (
                    "uomm",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bom_uom",
                        to="main.uom",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BilledStock",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.IntegerField()),
                (
                    "item_UOM",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="item_uom_billed_stock",
                        to="main.uom",
                    ),
                ),
                (
                    "items",
                    models.ManyToManyField(
                        related_name="billed_stocks_items", to="main.item"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("user_ID", models.CharField(editable=False, max_length=100)),
                ("name", models.CharField(max_length=100, null=True)),
                ("phone", models.IntegerField(null=True)),
                ("email", models.EmailField(max_length=254, null=True)),
                ("department", models.CharField(max_length=100, null=True)),
                (
                    "branch_code",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main.branch",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
                (
                    "user_role",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ul",
                        to="main.userrole",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="StoreOwner",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("name", models.CharField(max_length=100, null=True)),
                (
                    "email",
                    models.EmailField(
                        db_index=True, max_length=254, null=True, unique=True
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("maximum_branch", models.CharField(max_length=100)),
                ("organisational_address", models.CharField(max_length=100)),
                (
                    "branch",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main.branch",
                    ),
                ),
                (
                    "role",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main.userrole",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="stockbalanceCreate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "item_quantity",
                    models.IntegerField(blank=True, default=0, null=True),
                ),
                ("created_date", models.DateTimeField(auto_now_add=True, null=True)),
                ("update_date", models.DateTimeField(auto_now=True, null=True)),
                (
                    "branch",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main.branch",
                    ),
                ),
                (
                    "item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="main.item"
                    ),
                ),
            ],
            options={
                "unique_together": {("branch", "item")},
            },
        ),
        migrations.CreateModel(
            name="Cashier",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("name", models.CharField(max_length=100, null=True)),
                ("email", models.CharField(blank=True, max_length=100, null=True)),
                ("phone_number", models.CharField(max_length=100)),
                (
                    "branch",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main.branch",
                    ),
                ),
                (
                    "role",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="namea",
                        to="main.userrole",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AppUser",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("name", models.CharField(max_length=100, null=True)),
                (
                    "email",
                    models.EmailField(
                        db_index=True, max_length=254, null=True, unique=True
                    ),
                ),
                ("department", models.CharField(max_length=100, null=True)),
                ("phone_number", models.CharField(max_length=100, null=True)),
                ("id_number", models.CharField(max_length=100, null=True)),
                ("staff_number", models.CharField(max_length=100, null=True)),
                ("status", models.CharField(max_length=100, null=True)),
                (
                    "role",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main.userrole",
                    ),
                ),
            ],
        ),
    ]
